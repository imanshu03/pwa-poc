import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import path from "path";
import fs from "fs";
import LocationContextProvider from "./LocationContext";
import Script from "next/script";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  manifest: "/manifest.json",
  icons: [
    {
      url: "/icons/cred-196x196.png",
      type: "image/png",
    },
    {
      url: "/icons/cred-512x512.png",
      type: "image/png",
    },
  ],
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cssContent: string[] = [];
  const appendScriptsToHead = (pathName: string) => {
    const files = fs.readdirSync(pathName);
    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      const filePath = path.resolve(pathName, file);
      const stat = fs.statSync(filePath);
      if (stat.isFile()) {
        const content = fs.readFileSync(filePath, { encoding: "utf-8" });
        cssContent.push(content);
      } else if (stat.isDirectory()) {
        appendScriptsToHead(filePath);
      }
    }
  };

  let paths = ["static"];
  let currentPath;
  while (true) {
    paths.unshift("..");
    currentPath = path.resolve(__dirname, ...paths);
    if (fs.existsSync(currentPath)) break;
  }

  const cssPaths = path.resolve(currentPath, "css");
  appendScriptsToHead(cssPaths);

  return (
    <html lang="en">
      <head>
        {cssContent.map((content, i) => (
          <style key={i} dangerouslySetInnerHTML={{ __html: content }}></style>
        ))}
        <Script id="service-worker">
          {`
            (async function () {
              const registration = await navigator.serviceWorker.register(
                "/sw.js",
                { scope: "." }
              );
              console.log("Service worker registration", registration);
            })();
          `}
        </Script>
      </head>
      <body className={inter.className}>
        <LocationContextProvider>{children}</LocationContextProvider>
      </body>
    </html>
  );
}
